-- Functions & Triggers
create or replace function update_timestamptz()
    returns trigger as
$$
begin
    NEW.updated_at = now();
    return NEW;
end;
$$ language 'plpgsql';

-- Schema

create table public.adapters
(
    id       uuid primary key     default gen_random_uuid(),
    name     text        not null,
    added_at timestamptz not null default now()
);

create table public.events
(
    id         bigint generated by default as identity not null,
    created_at timestamptz                             not null default now(),
    url        text                                    not null,
    message    text                                    not null,
    source     uuid                                    not null references adapters (id)
);

create table public.locations
(
    id          uuid primary key default gen_random_uuid(),
    coordinates point   not null,
    is_exact    boolean not null
);

create table public.contacts
(
    id             uuid primary key     default gen_random_uuid(),
    first_name     text        not null,
    last_name      text        not null,
    disambiguation text unique,
    met_at_id      uuid references locations (id),
    lives_in_id    uuid references locations (id),
    birth_date     date,
    nationality    text,
    created_at     timestamptz not null default now(),

    unique (first_name, last_name, birth_date, nationality, disambiguation)
);

create table public.notes
(
    id         uuid primary key     default gen_random_uuid(),
    content    text        not null default '',
    created_at timestamptz not null default now(),
    updated_at timestamptz not null default now()
);

create trigger notes_updated_at_timestamptz
    before update
    on public.notes
    for each row
execute procedure
    update_timestamptz();

create table public.resources
(
    id         uuid primary key     default gen_random_uuid(),
    url        text        not null,
    created_at timestamptz not null default now(),
    updated_at timestamptz not null default now()
);

create trigger resources_updated_at_timestamptz
    before update
    on public.resources
    for each row
execute procedure
    update_timestamptz();
